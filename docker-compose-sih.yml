# SIH 2025 Demo - Krishi Sakhi Docker Compose
# This file demonstrates how the app would work with a full backend
# Currently the Flutter app works standalone with API integrations

version: '3.8'

services:
  # Future backend service (for demonstration)
  krishi-backend:
    image: node:18-alpine
    container_name: krishi-backend
    working_dir: /app
    volumes:
      - ./backend:/app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongo:27017/krishi_db
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
    command: sh -c "npm install && npm start"
    depends_on:
      - mongo
    networks:
      - krishi-network

  # Database for user data (demonstration)
  mongo:
    image: mongo:6.0
    container_name: krishi-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./sample_data:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_DATABASE: krishi_db
    networks:
      - krishi-network

  # Redis for caching AI responses
  redis:
    image: redis:7-alpine
    container_name: krishi-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - krishi-network

  # Web version of Flutter app (future enhancement)
  krishi-web:
    image: nginx:alpine
    container_name: krishi-web
    ports:
      - "8080:80"
    volumes:
      - ./build/web:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - krishi-backend
    networks:
      - krishi-network

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local

networks:
  krishi-network:
    driver: bridge

# Instructions for SIH Judges:
# 1. Currently the Flutter app works standalone with direct API calls
# 2. For full deployment, run: docker-compose -f docker-compose-sih.yml up
# 3. This would start backend services for user data management
# 4. The Flutter app can be configured to use this backend
# 5. For demo purposes, the APK works independently with Google/Weather APIs
